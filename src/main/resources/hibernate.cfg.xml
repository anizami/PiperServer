<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
    "-//Hibernate/Hibernate Configuration DTD//EN"
    "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
  <session-factory>
    <property name="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</property>
    <property name="hibernate.connection.driver_class">org.postgresql.Driver</property>
    <property name="hibernate.connection.username">whwxdnfufjwhhv</property>
    <property name="hibernate.connection.password">1Sfem0481k1oOSptNXqa2rupd4</property>
    <property name="hibernate.connection.url">jdbc:postgresql://ec2-54-83-204-78.compute-1.amazonaws.com:5432/ddc41hevd61td6?user=whwxdnfufjwhhv&amp;password=1Sfem0481k1oOSptNXqa2rupd4&amp;ssl=true&amp;sslfactory=org.postgresql.ssl.NonValidatingFactory</property>

      <property name="connection_pool_size">1</property>

      <!--
            This flag automatically updates the database schema to match the currently mapped
            Hibernate objects (in this case, just Joke). It's good for initial prototyping and
            development, but bad for production. Before release, you should settle on a schema
            dump it to a DDL file, then review it and handle forward migrations manually.
        -->
      <property name="hbm2ddl.auto">update</property>
      <property name="dialect">org.hibernate.dialect.MySQLDialect</property>

      <property name="show_sql">true</property>
      <property name="sql.syntax_pgs">true</property>

      <property name="javax.persistence.validation.mode">callback</property>

      <mapping class="PiperEvent"></mapping>


      <!-- DB schema will be updated if needed -->
    <!-- <property name="hbm2ddl.auto">update</property> -->
  </session-factory>
</hibernate-configuration>